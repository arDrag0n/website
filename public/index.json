[{"content":"With TWRP/OFRP adb shell lptools resize product_a 335872 # Do not change this value lptools resize system_a 5368709120 #4617089843 or 5368709120 (4.3GB or 5GB system) With Fastbootd fastboot resize-logical-partition system_a 5368709120 #(For 5GB) Reboot Recovery/Fastbootd after this Flash product_gsi e2fsck -f /dev/block/by-name/system resize2fs /dev/block/by-name/system 5G e2fsck -E unshare_blocks /dev/block/by-name-system ","permalink":"http://192.168.100.3:1313/make-gsi-rw/","summary":"With TWRP/OFRP adb shell lptools resize product_a 335872 # Do not change this value lptools resize system_a 5368709120 #4617089843 or 5368709120 (4.3GB or 5GB system) With Fastbootd fastboot resize-logical-partition system_a 5368709120 #(For 5GB) Reboot Recovery/Fastbootd after this Flash product_gsi e2fsck -f /dev/block/by-name/system resize2fs /dev/block/by-name/system 5G e2fsck -E unshare_blocks /dev/block/by-name-system ","title":"Make GSI RW (For Ext4)"},{"content":"Yes, You heard me right. But you might be wondering, \u0026ldquo;Isn\u0026rsquo;t the internet growing at an unprecedented rate?\u0026rdquo;. You might be correct but over the years, the Internet has become more centralized than ever.\nHOW? Big companies and social media control around 50% of internet traffic. People no longer have their own corner on the internet. IRC and RSS are dying. Hardly anybody notices small sites on their own unless you publish to social media. Small platforms are shrinking. AI is replacing the writer\u0026rsquo;s human connection with the reader. These AI-articles are hastily written and mass-produced. The Internet is being filled with these garbage AI-written articles that are pretty useless. This era of people think that the internet is just limited to these social media sites. There are plenty of great small websites but they are becoming harder to find. People just quit because they don\u0026rsquo;t get any traffic. Everything that was once run for fun, run because it was cool is now run for profit. Either a site exists to sell you things, sell you ideas, or sell you as a product. Things that are fun and goofy get overshadowed by the giants who can afford better SEO. There isn\u0026rsquo;t any fix to this problem but it\u0026rsquo;s just sad to see the early internet fade away. ","permalink":"http://192.168.100.3:1313/old-internet-is-dying/","summary":"Yes, You heard me right. But you might be wondering, \u0026ldquo;Isn\u0026rsquo;t the internet growing at an unprecedented rate?\u0026rdquo;. You might be correct but over the years, the Internet has become more centralized than ever.\nHOW? Big companies and social media control around 50% of internet traffic. People no longer have their own corner on the internet. IRC and RSS are dying. Hardly anybody notices small sites on their own unless you publish to social media.","title":"Old Internet is Dying"},{"content":"Swapfile and swap-partitions are rarely used now-a-days. But they still have one major use case which is hibernation. Use the following Commands to create and enable swapfile\nCommands sudo fallocate -l 6G /swapfile sudo chmod 600 /swapfile sudo mkswap /swapfile sudo swapon /swapfile then change fstab (/etc/fstab) so it automatically mounts your swap file on startup\n/swapfile none swap sw 0 0\nAfterward, check if your swap file is operating properly with htop.\nSwap can degrade SSD performance overtime so keep that in mind.\n","permalink":"http://192.168.100.3:1313/create-swapfile/","summary":"Swapfile and swap-partitions are rarely used now-a-days. But they still have one major use case which is hibernation. Use the following Commands to create and enable swapfile\nCommands sudo fallocate -l 6G /swapfile sudo chmod 600 /swapfile sudo mkswap /swapfile sudo swapon /swapfile then change fstab (/etc/fstab) so it automatically mounts your swap file on startup\n/swapfile none swap sw 0 0\nAfterward, check if your swap file is operating properly with htop.","title":"Create Swapfile"},{"content":"Typing sudo password again and again becomes very frustrating at times. But there is a solution to this madness. You can use fingerprint for this process. This post has been inspired by krdrag0n\u0026rsquo;s tweet.\nFor Linux Debian/Ubuntu Based Distros Run sudo pam-auth-update And use the space bar to enable Fingerprint authentication in the dialog Arch Based Distros Install fprintd and imagemagick\nNote: Some devices may require a different fork of libfprint.See Here Enroll fingerprint with fprint-enroll Append these lines to /etc/pam.d/sudo auth required pam_env.so auth sufficient pam_fprintd.so auth sufficient pam_unix.so try_first_pass likeauth nullok auth required pam_deny.so For Mac Add auth sufficient pam_tid.so to /etc/pam.d/sudo ","permalink":"http://192.168.100.3:1313/using-fingerprint-for-sudo-password/","summary":"Typing sudo password again and again becomes very frustrating at times. But there is a solution to this madness. You can use fingerprint for this process. This post has been inspired by krdrag0n\u0026rsquo;s tweet.\nFor Linux Debian/Ubuntu Based Distros Run sudo pam-auth-update And use the space bar to enable Fingerprint authentication in the dialog Arch Based Distros Install fprintd and imagemagick\nNote: Some devices may require a different fork of libfprint.","title":"Using Fingerprint for Sudo Password"},{"content":"Backup Apks Get list of installed apps adb shell pm list packages -f -3\nFetch Apks of all Installed Apps for APP in $(adb shell pm list packages -3 -f) do adb pull $( echo ${APP} | sed \u0026#34;s/^package://\u0026#34; | sed \u0026#34;s/base.apk=/base.apk /\u0026#34;).apk done Fetch Apk of One App adb pull /data/app/appFolderNameHere/base.apk app.apk\nGetting Partitions Imgs Backup adb pull /dev/block/by-name/SYSTEM system.img\nRestore adb push system.img /sdcard/\nThen\ndd if=/sdcard/system.img of=/dev/block/by-name/SYSTEM\nLogcat adb logcat -v color\n","permalink":"http://192.168.100.3:1313/adb-tricks/","summary":"Backup Apks Get list of installed apps adb shell pm list packages -f -3\nFetch Apks of all Installed Apps for APP in $(adb shell pm list packages -3 -f) do adb pull $( echo ${APP} | sed \u0026#34;s/^package://\u0026#34; | sed \u0026#34;s/base.apk=/base.apk /\u0026#34;).apk done Fetch Apk of One App adb pull /data/app/appFolderNameHere/base.apk app.apk\nGetting Partitions Imgs Backup adb pull /dev/block/by-name/SYSTEM system.img\nRestore adb push system.img /sdcard/\nThen\ndd if=/sdcard/system.img of=/dev/block/by-name/SYSTEM","title":"Useful Adb Commands"},{"content":"The Installer Download and Launch the Windows Installer.\nLaunch Command Prompt with Shift+F10\nPartitioning List Disks with list disk Select desired disk with sel disk # Check to verify there is NO partitions list partition (Optional) Delete any existing partitions del part #\nNOTE: THIS ERASES ALL DATA You can also use clean for deleting all partions. Check to verify DISK is GPT list disk and use convert gpt\nIf GPT is not Enabled Create Boot partition create partition efi size=100 Create Data partition create partition primary size=* Select Boot sel partition 1 Format Boot format fs=FAT32 quick Assign Boot partition assign letter=g: Select Data sel par 2 Format Data format fs=NTFS quick Assign Data partition assign letter=c:\nNOTE: You may need to UNASSIGN an existing C: drive Selecting Windows Version to Install DISM is the tool that is actually used to install windows. You can use the following command to get index# of the Windows Version you want to install.\nDISM /Get-ImageInfo /imagefile:x:\\sources\\install.wim Note the Index: # that you want to install\nInstall Windows Data Now we copy the windows data into the disk.\nDISM /apply-image /imagefile:x:\\sources\\install.wim /index:2 /applydir:c: English (World) Debloating Trick This will remove a lot of tiles from windows start menu and provides overall clean experience\ndism /Image:c: /Set-UserLocale:en-001 Copy Boot Files to EFI Copy the boot files to complete the EFI partition to boot into our windows.\nbcdboot c:\\Windows /s G: /f ALL Bypass OOBE For Windows 11 This bypasses Microsoft Account Requirement.\nNOTE: DISCONNECT FROM INTERNET before booting!\noobe\\BypassNRO System will restart after executing the command. Select Continue with limited Setup and name the device and create a local account.\nRunning debloat script after boot ChrisTitus created an awesome debloat script. We can use this to debloat windows and make it a little better.\nirm https://christitus.com/win | iex Also see:this Conclusion This is probably an overkill way to install Windows that I stole from Titus ;) and this provides a really good insight to what actually happens when you click install in Windows Setup.\n","permalink":"http://192.168.100.3:1313/shenanigan-free-windows-installation/","summary":"The Installer Download and Launch the Windows Installer.\nLaunch Command Prompt with Shift+F10\nPartitioning List Disks with list disk Select desired disk with sel disk # Check to verify there is NO partitions list partition (Optional) Delete any existing partitions del part #\nNOTE: THIS ERASES ALL DATA You can also use clean for deleting all partions. Check to verify DISK is GPT list disk and use convert gpt\nIf GPT is not Enabled Create Boot partition create partition efi size=100 Create Data partition create partition primary size=* Select Boot sel partition 1 Format Boot format fs=FAT32 quick Assign Boot partition assign letter=g: Select Data sel par 2 Format Data format fs=NTFS quick Assign Data partition assign letter=c:","title":"Installing Windows Using Only CMD"},{"content":"Boot time is how much time it takes to boot your computer when you press your power button. A lot of things can slow down your boot on Linux. In this article we will discuss this in detail.\nSystemd optimizations Disabling unnecessary services systemd-analyze is a command available on systemd distros (which most distros are). It shows which service is using more time to load and you can disable that service. Just don\u0026rsquo;t disable any important service or your computer won\u0026rsquo;t boot at all.\nYou can also use the sub-command systemd-analyze blame for more clearer output.\nUsing .socket instead of .service for starting service .socket are used to initiate the service process when its needed while .service starts the process on boot which costs boot time and unnecessary for services like cups\nSlimming Down initramfs Mkinitcpio Using Systemd instead of Busybox on early init By default, the Mkinitcpio configuration uses the base and udev hooks for building the initramfs. Faster boot times can be achieved by replacing them with systemd\nRemoving Unnecessary Hooks Use autodetect hook for initramfs which auto detects the require hooks\nUsing lz4 compression lz4 compression is slightly faster than zstd or gzip compressions. You can change this in /etc/mkinitcpio.conf\nSwitch to Dracut Dracut can generate unified kernel images with smaller size if configured correctly. This allows faster kernel loading.\nUsing Alternative Init System (Not recommended for beginners) Systemd started as an init manager but now has absorbed many services and processes. Other init systems such as runit,dinit,s6,etc. are much lighter and allows much faster boot time than systemd\nDisable Splash Disabling Bios Splash and Plymouth Splash can also speed up the boot because splash adds a delay in boot\nDisable Terminal Output On some fast systems using SSDs, The tty could also be a bottlneck meaning lesser the terminal output faster will be the boot.\nStaggered Spin-up on HDD On HDDs staggered spin can also be a problem but it can be fixed by checking dmesg output,i.e, sudo dmesg | grep SSS.\nIf there is output of this command, then add libahci.ignore_sss=1 to kernel parameters.\nConclusion This is barely scratching the surface in terms of optimization. You can always do some more optimization. Linux is already way faster than Windows and lighter in terms of resource usage. Then on top of that you can optimize it more to get single digit boot times!\n","permalink":"http://192.168.100.3:1313/optimizing-boot-time/","summary":"Boot time is how much time it takes to boot your computer when you press your power button. A lot of things can slow down your boot on Linux. In this article we will discuss this in detail.\nSystemd optimizations Disabling unnecessary services systemd-analyze is a command available on systemd distros (which most distros are). It shows which service is using more time to load and you can disable that service.","title":"Optimizing Linux Boot Time"},{"content":"The Problem Televisions started as an easy to use device, you just pressed a button, and a channel played. Now-a-days, Television has been transformed into “SmartTV” Full of Ads, Tracking Built-In (as a feature btw) and Bloated UI\nOptimizing Electronics The reason TVs feel bloated and laggy is because the tech companies just bundle the TV with a bunch of bloat that uses more resources than necessary. You can optimize your electronic device by removing bloat and can make your TV somewhat useable. Bloat takes up space and use that precious memory and CPU power.\nMy Solution There can be two solutions to this problem\nDebloating SmartTV Making Your Own SmartTV Debloating Smart TV You can debloat your Smart TV by:\nRooting (May Void Warranty But a thorough debloat process) Using Adb or a frontend for this process such as Universal Android Debloater Making Your Own Smart TV Displays are way Cheaper than than SmartTVs and they can be converted into smart TVs by attaching Raspberry Pi or a similar Mini PC. Options are limitless here. You can Browse the internet, install any app you want, Transform it into your Home Cinema, Connect it to your server, stream content, etc. If you want to explore this option further. I recommend this YouTube video from Jeff Greeling Conclusion You can optimize your TV more by debloating it or make your own one with only the services you need. It will be way faster, cheaper, and better than your current Smart TV experience.\n","permalink":"http://192.168.100.3:1313/making-a-real-smart-tv/","summary":"The Problem Televisions started as an easy to use device, you just pressed a button, and a channel played. Now-a-days, Television has been transformed into “SmartTV” Full of Ads, Tracking Built-In (as a feature btw) and Bloated UI\nOptimizing Electronics The reason TVs feel bloated and laggy is because the tech companies just bundle the TV with a bunch of bloat that uses more resources than necessary. You can optimize your electronic device by removing bloat and can make your TV somewhat useable.","title":"The Problem With Smart Televisions"},{"content":"Setting Limits Edit /etc/security/limits.conf Append the following lines * hard core 0 * soft core 0 Disabling setgid and setuid programs from core dumping Edit /etc/sysctl.d/9999-disable-core-dump.conf or /etc/sysctl.conf Append the following lines fs.suid.dumpable=0 kernel.core_pattern= |/bin/false ","permalink":"http://192.168.100.3:1313/disable-core-dumps/","summary":"Setting Limits Edit /etc/security/limits.conf Append the following lines * hard core 0 * soft core 0 Disabling setgid and setuid programs from core dumping Edit /etc/sysctl.d/9999-disable-core-dump.conf or /etc/sysctl.conf Append the following lines fs.suid.dumpable=0 kernel.core_pattern= |/bin/false ","title":"Disable Core Dumps"},{"content":"Build.Prop Tweaks # enable software keys qemu.hw.mainkeys=0 # Quick Power On ro.config.hw_quickpoweron=true # Disable Error reporting profiler.force_disable_err_rpt=1 profiler.force_disable_ulog=1 ro.kernel.android.checkjni=0 ro.kernel.checkjni=0 # Disable GPS Entirely ro.com.google.locationfeatures=0 ro.com.google.networklocation=0 # Advanced (Not Recommended) ro.config.nocheckin=1 persist.android.strictmode=0 ro.secure=0 dalvik.vm.verify-bytecode=false dalvik.vm.dexopt-flags=m=y,v=n,o=v logcat.live=disable ro.boot.selinux=permissive androidboot.selinux=permissive persist.android.strictmode=0 persist.selinux.enforcing=0 ro.build.selinux.enforce=0 security.perf_harden=0 selinux.reload_policy=0 selinux.sec.restorecon=0 ro.adb.secure=0 # Disable Boot Animation debug.sf.nobootanimation=1 # Networking net.ipv6.conf.all.disable_ipv6=1 net.ipv6.conf.default.disable_ipv6=1 # Disable SIM Functionality persist.telephony.support.ipv6=0 persist.radio.apm_sim_not_pwdn=0 # Disable Sensors ro.qti.sensors.pedometer=false ro.qti.sensors.step_counter=false ro.qti.sensors.step_detector=false ro.qti.sensors.facing=false ro.qti.sensors.pick_up=false keyguard.no_require_sim=true # Disable Audio Warnings audio.safemedia.bypass=true audio.safemedia.force=false # Disable Stupid port shuffling in wireless Adb (Android 10 and above) service.adb.tls.port=5555 service.adb.tcp.port=5555 ","permalink":"http://192.168.100.3:1313/build-prop-tweaks/","summary":"Build.Prop Tweaks # enable software keys qemu.hw.mainkeys=0 # Quick Power On ro.config.hw_quickpoweron=true # Disable Error reporting profiler.force_disable_err_rpt=1 profiler.force_disable_ulog=1 ro.kernel.android.checkjni=0 ro.kernel.checkjni=0 # Disable GPS Entirely ro.com.google.locationfeatures=0 ro.com.google.networklocation=0 # Advanced (Not Recommended) ro.config.nocheckin=1 persist.android.strictmode=0 ro.secure=0 dalvik.vm.verify-bytecode=false dalvik.vm.dexopt-flags=m=y,v=n,o=v logcat.live=disable ro.boot.selinux=permissive androidboot.selinux=permissive persist.android.strictmode=0 persist.selinux.enforcing=0 ro.build.selinux.enforce=0 security.perf_harden=0 selinux.reload_policy=0 selinux.sec.restorecon=0 ro.adb.secure=0 # Disable Boot Animation debug.sf.nobootanimation=1 # Networking net.ipv6.conf.all.disable_ipv6=1 net.ipv6.conf.default.disable_ipv6=1 # Disable SIM Functionality persist.telephony.support.ipv6=0 persist.radio.apm_sim_not_pwdn=0 # Disable Sensors ro.qti.sensors.pedometer=false ro.qti.sensors.step_counter=false ro.qti.sensors.step_detector=false ro.qti.sensors.facing=false ro.qti.sensors.pick_up=false keyguard.no_require_sim=true # Disable Audio Warnings audio.","title":"Build.prop Tweaks"},{"content":"Linux One Click Boot Regenerating Config Files on Arch Spotify Adblock Disabling Core Dumps Android Build.prop tweaks ADB Backup commands ","permalink":"http://192.168.100.3:1313/my-configs/","summary":"Linux One Click Boot Regenerating Config Files on Arch Spotify Adblock Disabling Core Dumps Android Build.prop tweaks ADB Backup commands ","title":"My Configs"},{"content":"megatools dl \u0026#34;https://mega.nz/#hashvideo\u0026#34; --path - | mpv - ","permalink":"http://192.168.100.3:1313/posts/2023/streaming-mega-files-directly/","summary":"megatools dl \u0026#34;https://mega.nz/#hashvideo\u0026#34; --path - | mpv - ","title":"Directly Stream mega.nz video"},{"content":"Getting one click boot is very satisfactory but you should know the security risks asscoiated with it. Nevertheless, here is the guide to Setup Autologin.\nConfiguring TTY Replace ar0177417 with your username /sbin/agetty -n -N -i -a ar0177417 tty1 38400 linux Autostarting Display Server Replace Hyprland or startx with your desired WM or startx for xorg For Fish Shell Add this to your fish config if status is-login if test -z \u0026#34;$DISPLAY\u0026#34; -a \u0026#34;$XDG_VTNR\u0026#34; = 1 export LIBSEAT_BACKEND=logind exec dbus-run-session Hyprland \u0026amp;\u0026gt; /dev/null end end if status is-interactive # Commands to run in interactive sessions can go here end For Bash Shell Add this to ~/.bash_profile if [ -z \u0026#34;${DISPLAY}\u0026#34; ] \u0026amp;\u0026amp; [ \u0026#34;${XDG_VTNR}\u0026#34; -eq 1 ]; then exec startx fi ","permalink":"http://192.168.100.3:1313/autologin-linux/","summary":"Getting one click boot is very satisfactory but you should know the security risks asscoiated with it. Nevertheless, here is the guide to Setup Autologin.\nConfiguring TTY Replace ar0177417 with your username /sbin/agetty -n -N -i -a ar0177417 tty1 38400 linux Autostarting Display Server Replace Hyprland or startx with your desired WM or startx for xorg For Fish Shell Add this to your fish config if status is-login if test -z \u0026#34;$DISPLAY\u0026#34; -a \u0026#34;$XDG_VTNR\u0026#34; = 1 export LIBSEAT_BACKEND=logind exec dbus-run-session Hyprland \u0026amp;\u0026gt; /dev/null end end if status is-interactive # Commands to run in interactive sessions can go here end For Bash Shell Add this to ~/.","title":"Autologin Linux"},{"content":"Git is a very powerful version control and a project managing tool. Every dev has to use git for projects. Below is my git cheatsheat. Below are some basic commands and some settings every developer should know\nBasics git init for initiating a git repo in a folder git add to add file/folder to staging area git commit to commit changes git push to publish changes to remote git status to check status of git repo including staged and unstaged changes Branches You can use branches for making a copy of repo, implementing a feature and then merging it back to main branch\ngit branch is used for listing all branches git branch \u0026lt;branch_name\u0026gt; is used for creating new branch git branch -d \u0026lt;branch_name\u0026gt; is used for deleting a branch git checkout \u0026lt;branch_name\u0026gt; to switch to new branch git merge \u0026lt;merge_into_this\u0026gt; to merge currently checked out branch to some other branch Stashes The git stash command takes your uncommitted changes (both staged and unstaged), saves them away for later use, and then reverts them from your working copy. This is particularly useful in merge conflicts and syncing forks.\ngit stash list shows all stashes git stash drop for dropping changes git stash apply for applying changes git stash pop for git stash apply + drop Reverting Commit git reset --hard HEAD~n (Doesn\u0026rsquo;t retain uncommited changes) git reset --soft HEAD~n (Retains uncommited Changes) where n is the number of commits to be reverted. Git Configs You can also use git configs to create your own shortcuts and much more. The one git setting I always use is\nAuto Setting push remote git config --global --add --bool push.autoSetupRemote true For Further commands see this cheatsheat ","permalink":"http://192.168.100.3:1313/git-cheatsheat/","summary":"Git is a very powerful version control and a project managing tool. Every dev has to use git for projects. Below is my git cheatsheat. Below are some basic commands and some settings every developer should know\nBasics git init for initiating a git repo in a folder git add to add file/folder to staging area git commit to commit changes git push to publish changes to remote git status to check status of git repo including staged and unstaged changes Branches You can use branches for making a copy of repo, implementing a feature and then merging it back to main branch","title":"Basic Git Cheatsheat"},{"content":"I was trying to edit /etc/pam.d and fix elogind on my Artix Installation. Unfortunately, It went badly and I messed up my pam.d directory.However, I Found a Fix. In pacman, It is very easy to check files owned by packages. So, We can simply generate a list of packages which have files in pam.d and reinstall them.\nSteps Remove Files to be regenerated Then, Stock Files are regenerated by using the following command: For Bash Shell pacman -S $(pacman -Ql | grep /etc/pam.d/$ | awk '{print $1}')\nFor Fish Shell pacman -S (pacman -Ql | grep /etc/pam.d/\\$ | awk '{print $1}')\nThis is very useful specially for rolling and bleeding edge distros. Using this you can regenerate directories. If you want regenerate a specific files just substitute /etc/pam.d/$ with the name of file.\n","permalink":"http://192.168.100.3:1313/regenerating-configs-using-pacman/","summary":"I was trying to edit /etc/pam.d and fix elogind on my Artix Installation. Unfortunately, It went badly and I messed up my pam.d directory.However, I Found a Fix. In pacman, It is very easy to check files owned by packages. So, We can simply generate a list of packages which have files in pam.d and reinstall them.\nSteps Remove Files to be regenerated Then, Stock Files are regenerated by using the following command: For Bash Shell pacman -S $(pacman -Ql | grep /etc/pam.","title":"Effortless Directory Regeneration Using Pacman"},{"content":"Social Media has changed drastically over the years.But the question is \u0026ldquo;Can you really trust these companies?\u0026rdquo;. Decentralized social media apps and websites are gaining traction especially because of recent policy changes of social media apps such as Reddit and Twitter. Last Year, Twitter was acquired by Elon Musk and raised API prices and changed the platform for better or worse. Similarly, Reddit also increased its API prices. Decentralized Social Media such as Mastodon, Lemmy, and Kbin gained popularity due to this.\nAdvantages Decentralized Social Media is not controlled by one single company or person rather you can make your own instance of social media and interact with others. Thus, you cannot be banned from such a platform. Decentralized Social Media is also harder to fully ban in a country because there are so many instances. If one instance is banned, you can use another. If you don’t like the policies of one instance you can choose a different instance of your liking. Disadvantages The main disadvantage of something like Lemmy is that it is harder to moderate because of bot accounts. Fewer Users are present on these platforms. ","permalink":"http://192.168.100.3:1313/decentralized-social-media/","summary":"Social Media has changed drastically over the years.But the question is \u0026ldquo;Can you really trust these companies?\u0026rdquo;. Decentralized social media apps and websites are gaining traction especially because of recent policy changes of social media apps such as Reddit and Twitter. Last Year, Twitter was acquired by Elon Musk and raised API prices and changed the platform for better or worse. Similarly, Reddit also increased its API prices. Decentralized Social Media such as Mastodon, Lemmy, and Kbin gained popularity due to this.","title":"Decentralized Social Media"},{"content":"Are you tired of constantly being interrupted by ads while listening to your favorite music on Spotify? If so, you\u0026rsquo;re in luck! I just stumbled upon SpotX, the Spotify ad blocker that will revolutionize the way you listen to music.\nSpotX and BlockTheSpot are simple, lightweight tools that blocks all ads on Spotify, allowing you to enjoy uninterrupted music all day long. With SpotX, you no longer have to put up with annoying ads or pay for a premium subscription to get rid of them. Simply download the tool, run it, and you\u0026rsquo;re good to go.\nPrerequisite Spotify An internet connection Installation Just goto to the SpotX and run the bash command and for Windows use BlockTheSpot . However, if you have installed Spotify from Microsoft Store, It would be uninstalled and the script would automatically install the latest official version from spotify.\nSo why wait? If you\u0026rsquo;re tired of being interrupted by ads on Spotify, give SpotX a try and see for yourself how much better your music listening experience can be. You won\u0026rsquo;t be disappointed!\n","permalink":"http://192.168.100.3:1313/spotx/","summary":"Are you tired of constantly being interrupted by ads while listening to your favorite music on Spotify? If so, you\u0026rsquo;re in luck! I just stumbled upon SpotX, the Spotify ad blocker that will revolutionize the way you listen to music.\nSpotX and BlockTheSpot are simple, lightweight tools that blocks all ads on Spotify, allowing you to enjoy uninterrupted music all day long. With SpotX, you no longer have to put up with annoying ads or pay for a premium subscription to get rid of them.","title":"Blocking Ads on Spotify"}]